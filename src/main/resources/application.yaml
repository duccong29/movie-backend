#spring.application.name=movie-backend

server:
  port: 8080

spring:
  datasource:
    url: "jdbc:mysql://localhost:3306/movies"
    driverClassName: "com.mysql.cj.jdbc.Driver"
    username: 
    password: 

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  servlet:
    multipart:
      enabled: true
      max-file-size: 1000MB
      max-request-size: 1000MB

  files:
    video: videos/

  file:
    video:
      hsl: videos_hsl/

  image:
    upload:
      dir: ./uploads/images
    max-size: 5242880
    allowed-formats: jpg,jpeg,png,webp

  cloudinary:
    cloud_name: ""
    api_key: ""
    api_secret: ""

  jwt:
    signerKey: ""
    valid-duration: 86400 # in second
    refreshable-duration: 36000 # in seconds

  kafka:
    bootstrap-servers: localhost:9094
    consumer:
      group-id: movies
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        max.partition.fetch.bytes: 1073741824  # 1 GB
        fetch.max.bytes: 1073741824         # 1 GB
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        max.request.size: 1073741824          # 1 GB

  outbound:
    identity:
      client-id: ""
      client-secret: ""
      redirect-uri: "http://localhost:3000/authenticate"

  mail:
    host: smtp.gmail.com
    port: 587
    username: 
    password: 
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.starttls.required: true

  elasticsearch:
    enabled: false
    uris: http://localhost:9200
